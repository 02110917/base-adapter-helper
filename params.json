{"name":"BaseAdapter Helper","tagline":"Abstraction for the usual BaseAdapter \"ViewHolder\" pattern","body":"> **BaseAdapter Helper** aims to make BaseAdapter's ```getView()``` method much more readable, getting rid of the [ViewHolder pattern](http://www.jmanzano.es/blog/?p=166) boilerplate code.\r\n\r\n# Get it\r\n\r\nBaseAdapter Helper is now **available on Maven Central**.\r\n\r\n```\r\n<dependency>\r\n  <groupId>com.joanzapata.android</groupId>\r\n  <artifactId>base-adapter-helper</artifactId>\r\n  <version>1.0.2</version>\r\n</dependency>\r\n```\r\n\r\n# Before\r\n\r\n```java\r\n@Override\r\npublic View getView(int position, View v, ViewGroup parent) {\r\n    // Keeps reference to avoid future findViewById()\r\n    ContactsViewHolder viewHolder;\r\n\r\n    if (v == null) {\r\n        LayoutInflater li = (LayoutInflater) getContext().getSystemService(\r\n                Context.LAYOUT_INFLATER_SERVICE);\r\n        v = li.inflate(R.layout.contact_row, parent, false);\r\n\r\n        viewHolder = new ContactsViewHolder();\r\n        viewHolder.txName = (TextView) v.findViewById(R.id.tvName);\r\n        viewHolder.txEmails = (TextView) v.findViewById(R.id.tvEmails);\r\n        viewHolder.txPhones = (TextView) v.findViewById(R.id.tvNumbers);\r\n\r\n        v.setTag(viewHolder);\r\n    } else {\r\n        viewHolder = (ContactsViewHolder) v.getTag();\r\n    }\r\n\r\n    Contact contact = contacts.get(position);\r\n    if (contact != null) {\r\n        viewHolder.txName.setText(contact.getName());\r\n        viewHolder.txEmails.setText(contact.getEmails().toString());\r\n        viewHolder.txPhones.setText(contact.getNumbers().toString());\r\n    }\r\n    return v;\r\n}\r\n\r\nstatic class ContactsViewHolder {\r\n    TextView txName;\r\n    TextView txEmails;\r\n    TextView txPhones;\r\n}\r\n```\r\n\r\n> [Source](http://www.jmanzano.es/blog/?p=166)\r\n\r\n# After\r\n\r\n```java\r\n@Override\r\npublic View getView(int position, View convertView, ViewGroup parent) {\r\n    Contact contact = contacts.get(position);\r\n    return BaseAdapterHelper.get(context, convertView, parent, R.layout.contact_row)\r\n            .setText(R.id.tvName, contact.getName())\r\n            .setText(R.id.tvEmails, contact.getEmails().toString())\r\n            .setText(R.id.tvNumbers, contact.getNumbers().toString())\r\n            .getView();\r\n}\r\n```\r\n\r\n# Features\r\n\r\nFor now you can use:\r\n\r\n* ```setText()``` Calls ```setText(String)``` on any TextView.\r\n* ```setAlpha()``` Calls ```setAlpha(float)``` on any View.\r\n* ```setImageResource()``` Calls ```setImageResource(int)``` on any ImageView.\r\n* ```setImageDrawable()``` Calls ```setImageDrawable(Drawable)``` on any ImageView.\r\n* ```setImageBitmap()``` Calls ```setImageBitmap(Bitmap)``` on any ImageView.\r\n* ```setImageUrl()``` Uses [Square's Picasso](http://square.github.io/picasso/) to download the image and put it in an ImageView.\r\n* ```setImageBuilder()``` Associates a [Square's Picasso](http://square.github.io/picasso/) RequestBuilder to an ImageView.\r\n* If you need something else, please [report an issue](https://github.com/JoanZapata/base-adapter-helper/issues). Any contribution is welcome!\r\n\r\nComplete sample:\r\n\r\n```java\r\n@Override\r\npublic View getView(int position, View convertView, ViewGroup parent) {\r\n    return BaseAdapterHelper.get(context, convertView, parent, R.layout.contact_row)\r\n            .setText(R.id.tvName, contact.getName())\r\n            .setAlpha(R.id.ivIcon, contact.isEnabled() ? 1f : 0f)\r\n            .setImageUrl(R.id.ivIcon, contact.getPictureUrl()) // or\r\n            .setImageBuilder(R.id.ivIcon, Picasso.with(context).load(contact.getPictureUrl()).resize(100, 100))\r\n            .getView();\r\n}\r\n```\r\n\r\n# Not covered features\r\n\r\nIf you need a feature which is not yet covered by BaseAdapterHelper, you can use ```getView(int)``` to retrieve any view in the layout.\r\n\r\n```java\r\n @Override\r\npublic View getView(int position, View convertView, ViewGroup parent) {\r\n    ImageListModel model = getItem(position);\r\n    BaseAdapterHelper helper = BaseAdapterHelper.get(context, convertView, parent, R.layout.list_item)\r\n            .set...\r\n            .set...;\r\n    TextView textView = helper.getView(R.id.listText);\r\n    textView.setText(\"Use this as a last resort\");\r\n    return helper.getView();\r\n}\r\n```\r\n\r\nUse it as the very last resort, and please create [an issue](https://github.com/JoanZapata/base-adapter-helper/issues).\r\n\r\n# Performance\r\n\r\nThe performances using the BaseAdapter Helper are **equivalent** to the ones of the **ViewHolder pattern**.\r\nIt has been tested on **thousands items list** of **complex item structure** with more than **30 views to be adapted** on each item, and the ```getView()``` method has shown ```similar execution times```.\r\n\r\n# License\r\n\r\n```\r\nCopyright 2013 Joan Zapata\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nThis project uses Picasso from Square, which is licensed under the same\r\nlicense as this project. You can find the project page at\r\n\r\n    http://square.github.io/picasso/\r\n```\r\n","google":"UA-41408777-1","note":"Don't delete this file! It's used internally to help with page regeneration."}