{"name":"BaseAdapter Helper","tagline":"Abstraction for the usual BaseAdapter \"ViewHolder\" pattern","body":"[![Overview](https://raw.github.com/JoanZapata/base-adapter-helper/master/header.png)](https://github.com/JoanZapata/base-adapter-helper/blob/5465bea778f098a059390c441416c501e599cc10/base-adapter-helper-sample/src/main/java/com/joanzapata/android/twitter/TwitterActivity.java#L44-L57)\r\n\r\n[![Alt](http://developer.android.com/images/brand/en_app_rgb_wo_45.png)](https://play.google.com/store/apps/details?id=com.joanzapata.android.twitter)\r\n\r\n> **BaseAdapterHelper** aims to make BaseAdapter's ```getView()``` method much more readable, getting rid of the [ViewHolder pattern](http://www.jmanzano.es/blog/?p=166) boilerplate code.\r\n\r\n> **QuickAdapter** allows you to shorten the code of most usual ```BaseAdapter```, taking care of implementing everything for you based on your data list. You only need to focus on the mapping between your view and your model.\r\n\r\n# Get it\r\n\r\nBaseAdapter Helper is now **[available on Maven Central](http://search.maven.org/remotecontent?filepath=com/joanzapata/android/base-adapter-helper/1.1.10/base-adapter-helper-1.1.10.jar)**.\r\n\r\n```xml\r\n<dependency>\r\n  <groupId>com.joanzapata.android</groupId>\r\n  <artifactId>base-adapter-helper</artifactId>\r\n  <version>1.1.10</version>\r\n</dependency>\r\n```\r\n\r\nor\r\n\r\n```groovy\r\ncompile 'com.joanzapata.android:base-adapter-helper:1.1.10'\r\n```\r\n\r\n# Features\r\n\r\n## BaseAdapterHelper\r\n\r\n* ```setText()``` Calls ```setText(String)``` on any TextView.\r\n* ```setAlpha()``` Calls ```setAlpha(float)``` on any View.\r\n* ```setVisible()``` Calls ```setVisibility(int)``` on any View.\r\n* ```linkify()``` Calls ```Linkify.addLinks(view, ALL)``` on any TextView.\r\n* ```setTypeface()``` Calls ```setTypeface(Typeface)``` on any TextView.\r\n* ```setProgress()``` Calls ```setProgress(int)``` on any ProgressBar.\r\n* ```setMax()``` Calls ```setMax(int)``` on any ProgressBar.\r\n* ```setRating()``` Calls ```setRating(int)``` on any RatingBar.\r\n* ```setImageResource()``` Calls ```setImageResource(int)``` on any ImageView.\r\n* ```setImageDrawable()``` Calls ```setImageDrawable(Drawable)``` on any ImageView.\r\n* ```setImageBitmap()``` Calls ```setImageBitmap(Bitmap)``` on any ImageView.\r\n* ```setImageUrl()``` Uses [Square's Picasso](http://square.github.io/picasso/) to download the image and put it in an ImageView.\r\n* ```setImageBuilder()``` Associates a [Square's Picasso](http://square.github.io/picasso/) RequestBuilder to an ImageView.\r\n* ```setOnClickListener()```\r\n* ```setOnTouchListener()```\r\n* ```setOnLongClickListener()```\r\n* ```setTag()```\r\n* ```setChecked()```\r\n* ```setAdapter()```\r\n* If you need something else, please [report an issue](https://github.com/JoanZapata/base-adapter-helper/issues). Any contribution is welcome! In the meanwhile, you can still use ```getView(id)```on the adapter to do custom operations.\r\n\r\n## QuickAdapter\r\n\r\n[![Overview](https://raw.github.com/JoanZapata/base-adapter-helper/master/progress_sample.png)](https://github.com/JoanZapata/base-adapter-helper/blob/5465bea778f098a059390c441416c501e599cc10/base-adapter-helper-sample/src/main/java/com/joanzapata/android/twitter/TwitterActivity.java#L85)\r\n\r\n* ```showIndeterminateProgress(boolean)``` Shows/hides an indeterminate progress at the end of the list.\r\n\r\n# Performance\r\n\r\nThe performances using the BaseAdapter Helper are **equivalent** to the ones of the **ViewHolder pattern**.\r\nIt has been tested on **thousands items list** of **complex item structure** with more than **30 views to be adapted** on each item, and the ```getView()``` method has shown ```similar execution times```.\r\n\r\n# License\r\n\r\n```\r\nCopyright 2013 Joan Zapata\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nThis project uses Picasso from Square, which is licensed under the same\r\nlicense as this project. You can find the project page at\r\n\r\n    http://square.github.io/picasso/\r\n    \r\nThe sample application uses Twitter4j by Yusuke Yamamoto, \r\nActionBarSherlock by Jake Wharton, and AndroidAnnotations by Pierre-Yves Ricau, \r\nall of them being licensed under the Apache license version 2.0.\r\n```\r\n","google":"UA-41408777-1","note":"Don't delete this file! It's used internally to help with page regeneration."}